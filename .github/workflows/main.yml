name: GameCI Test Runner 🎮

on: [push, pull_request]

permissions:
  contents: read
  actions: write
  checks: write
  pull-requests: write

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
    testRunner:
      name: Test in ${{ matrix.testMode }} ✨
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          testMode:
            - EditMode
            - PlayMode
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        - name: Restore LFS cache
          uses: actions/cache@v4
          id: lfs-cache
          with:
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard
    
        - name: Restore Library cache
          uses: actions/cache@v4
          with:
            path: Library
            key: Library-test-project-${{ matrix.targetPlatform }}
            restore-keys: |
              Library-test-project-
              Library-
    
        - name: Run tests
          uses: game-ci/unity-test-runner@v4
          id: testRunner
          with:
            unityVersion: 6000.0.24f1
            projectPath: "."
            testMode: ${{ matrix.testMode }}
            checkName: ${{ matrix.testMode }} test results
            githubToken: ${{ secrets.GITHUB_TOKEN }}
    
        - uses: actions/upload-artifact@v4
          with:
            name: Test results (${{ matrix.testMode }})
            path: ${{ steps.testRunner.outputs.artifactsPath }}
    

    buildWebGL:
      needs: testRunner
      name: Build for WebGL 🖥️
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        - name: Restore LFS cache
          uses: actions/cache@v4
          id: lfs-cache
          with:
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard

        - name: Restore Library cache
          uses: actions/cache@v4
          with:
            path: Library
            key: Library-build-WebGL
            restore-keys: |
              Library-build-
              Library-

        - name: Free up disk space
          run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /usr/local/lib/android
            sudo rm -rf /opt/ghc
            docker system prune -af || true
            docker volume prune -f || true

        - uses: game-ci/unity-builder@v4
          with:
            targetPlatform: WebGL

        - uses: actions/upload-artifact@v4
          with:
            name: build-WebGL
            path: build/WebGL

    buildForAllSupportedPlatforms:
      needs: testRunner
      name: Build for ${{ matrix.targetPlatform }}
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          targetPlatform:
            - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
            - StandaloneWindows # Build a Windows standalone.
            - StandaloneWindows64 # Build a Windows 64-bit standalone.
            - StandaloneLinux64 # Build a Linux 64-bit standalone.
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
            lfs: true
        - uses: actions/cache@v3
          with:
            path: Library
            key: Library-${{ matrix.targetPlatform }}
            restore-keys: Library-
        - if: matrix.targetPlatform == 'Android'
          uses: jlumbroso/free-disk-space@v1.3.1
        - uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: ${{ matrix.targetPlatform }}
        - uses: actions/upload-artifact@v3
          with:
            name: Build-${{ matrix.targetPlatform }}
            path: build/${{ matrix.targetPlatform }}

    deployPages:
      needs: buildWebGL
      name: Deploy to Github Pages 🚀
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - uses: actions/download-artifact@v4
          with:
            name: build-WebGL
            path: ./build
        
        - name: Move WebGL build to root
          run: mv build/WebGL/* ./

        - name: Deploy 🚀
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git checkout --orphan gh-pages
            git add . --force
            git commit -m "Deploy WebGL build to GitHub Pages" || echo "No changes to commit"
            git push origin gh-pages